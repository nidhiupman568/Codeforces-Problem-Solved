#include<bits/stdc++.h>
using namespace std;
const int N=2e3+100;
int n,_;
vector<int>g[N];
vector<int>cir;
stack<int>st;
int vis[N],a[N][N];
void dfs(int x,int fa)
{
	if(!cir.empty())return vis[x]=1,void();
	if(vis[x])
	{
		int y;do{y=st.top();st.pop();cir.push_back(y);}while(y!=x);
		return;
	}
	vis[x]=1;st.push(x);
	for(auto y:g[x])if(y!=fa)dfs(y,x);
	vis[x]=0;if(!st.empty())st.pop();
}
//int&q(int x,int y){return a[min(x,y)][max(x,y)-n];}
#define q(x,y) a[min(x,y)][max(x,y)-n]
int main()
{
	cin>>_;
	while(_--)
	{
		cin>>n;while(!st.empty())st.pop();
		for(int i=1;i<=2*n;i++)g[i].clear(),vis[i]=0;cir.clear();
		for(int i=1,x,y;i<=2*n;i++)cin>>x>>y,a[x][y]=i,g[x].push_back(y+n),g[y+n].push_back(x);
		for(int i=1;i<=n;i++)if(!vis[i])dfs(i,0);
//		for(auto x:cir)printf("%d ",x);puts("");
		while(cir.size()>4)
		{
			int p=cir.size()/2;if(p%2==0)p--;
			cout<<"? "<<min(cir[0],cir[p])<<' '<<max(cir[p],cir[0])-n<<endl;
			int col;cin>>col;q(cir[0],cir[p])=col;
			int flag=1;for(int i=0;i<p;i++)flag&=q(cir[i],cir[i+1])!=col;
			if(flag)cir.resize(p+1);
			else{vector<int>tmp;for(int i=p;i<cir.size();i++)tmp.push_back(cir[i]);tmp.push_back(cir[0]);cir=tmp;}
		}
		cout<<"! "<<min(cir[0],cir[1])<<' '<<min(cir[2],cir[3])<<' '<<max(cir[0],cir[1])-n<<' '<<max(cir[2],cir[3])-n<<endl;
		string s;cin>>s;if(s!="OK")exit(1);
	}
	return 0;
}
