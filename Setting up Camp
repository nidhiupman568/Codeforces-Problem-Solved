#include<cstdio>
#include<iostream>
#include<algorithm>
#include<queue>
#include<cmath>
#include<iomanip>
#include<map>
#include<map>
#include<set>
#include<string>
#include<cstring>
#include<bitset>
#include<stack>
#include<vector>
#include<cstdlib>
#include<cstddef>
#include<fstream>
#include<numeric>
#include<unordered_set>
#include<iterator>
#include<array>
#include<ctime>
#include<chrono>
#include<random>
#include<bitset>
#include<sstream>
// #include<ext/pb_ds/assoc_container.hpp>
// #include<ext/pb_ds/tree_policy.hpp>
#define inf 2147483647
#define inf2 0x7fffffff
#define PII pair<int,int>
//#define R register
#define rep(i,l,r) for(int i=l;i<=r;i++)
#define rep2(i,r,l) for(int i=r;i>=l;i--)
#define rm cin.tie(nullptr)->sync_with_stdio(false),cout.setf(ios::fixed,ios::floatfield);
using namespace std;
// using namespace __gnu_pbds;
typedef long long ll;
typedef unsigned long long ull;
// typedef __int128 o;
typedef double db;
typedef long double ld;
// typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
int read()
{
	int s=0,w=1; char ch=getchar(); 
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {s=(s<<3)+(s<<1)+ch-'0';ch=getchar();}
    return s*w;
}
void write(int x)
{
	if(x<0) {putchar('-');x=-x;} if(x>9) write(x/10); putchar(x%10+'0');//x>9或x>=10
}
// int ls(int x){return x<<1;}
// int rs(int x){return x<<1|1;}
#define ls p<<1
#define rs p<<1|1
#define lowbit(x) x&(-x)
template<typename T,typename... Args>//此模板和可变参数包至少要c++17
void prr(T a,Args... args)
{
	cout<<a<<" ";
	if constexpr (sizeof...(args)>0) prr(args...);
}
template<typename... Args>
void pr(Args...args)
{
	cout<<" << ";
	prr(args...);
	cout<<" >> "<<endl;
}
void debug()
{
    freopen("","r",stdin);
    freopen("","w",stdout);
}
ll a,b,c;
void solve()
{
    cin>>a>>b>>c;
    if((b%3+c)<3 && b%3) {cout<<-1<<endl;return;}
    if(b%3==0) cout<<a+b/3+(int)ceil(1.0*c/3)<<endl;
    else cout<<a+b/3+(int)ceil(1.0*(b%3+c)/3)<<endl;
}
int main()
{
    //debug();
    rm;
    int T;
    cin>>T;
    while(T--)
    solve();
	return 0;
}
