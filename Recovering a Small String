#include<cstdio>
#include<iostream>
#include<algorithm>
#include<queue>
#include<cmath>
#include<iomanip>
#include<map>
#include<map>
#include<set>
#include<string>
#include<cstring>
#include<bitset>
#include<stack>
#include<vector>
#include<cstdlib>
#include<cstddef>
#include<fstream>
#include<numeric>
#include<unordered_set>
#include<iterator>
#include<array>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define inf 2147483647
#define inf2 0x7fffffff
#define PII pair<int,int>
//#define R register
#define rep(i,l,r) for(int i=l;i<=r;i++)
#define rep2(i,r,l) for(int i=r;i>=l;i--)
#define rm cin.tie(nullptr)->sync_with_stdio(false),cout.setf(ios::fixed,ios::floatfield);
#define all(x) x.begin(),x.end()
#define sz(x) (int)x.size()
#define pb push_back
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef unsigned long long ull;
// typedef __int128 o;
typedef double db;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
int read()
{
	int s=0,w=1; char ch=getchar(); 
    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}
    while(ch>='0'&&ch<='9') {s=(s<<3)+(s<<1)+ch-'0';ch=getchar();}
    return s*w;
}
void write(int x)
{
	if(x<0) {putchar('-');x=-x;} if(x>9) write(x/10); putchar(x%10+'0');//x>9æˆ–x>=10
}
// int ls(int x){return x<<1;}
// int rs(int x){return x<<1|1;}
#define ls p<<1
#define rs p<<1|1
#define lowbit(x) x&(-x)
void debug()
{
    freopen("","r",stdin);
    freopen("","w",stdout);
}
int n;
int a[10];
bool ck(int x){return x>=1&&x<=26;}
char change(int x){return char(x-1+'a');}
void solve()
{   
    cin>>n;
    bool f=0;
    for(int i=1;i<=26;i++)
    {
        a[1]=i;
        for(int j=1;j<=26;j++)
        {
            a[2]=j;
            a[3]=n-i-j;
            if(ck(a[3])) {f=1;break;}
        }
        if(f) break;
    }
    for(int i=1;i<=3;i++) cout<<change(a[i]);
    cout<<endl;
}
int main()
{
    //debug();
    rm;
    int T;
    cin>>T;
    while(T--)
        solve();
	return 0;
}
