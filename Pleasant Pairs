#include <bits/stdc++.h>
using namespace std;
#define frn(i, x , n) for(int i = x ; i < n ; i++)
#define rfrn(i , x , n) for(int i = n-1 ; i >= x ; i--)
#define fre(it ,container) for(auto it : container)
#define mod 1000000007;
#define out(x) cout << x << endl;
#define in(x) cin >> x;
#define arrin(a , n) for(int i = 0 ; i < n ; i++)in(a[i]);
#define arrout(a , n)  for(int i = 0 ; i < n ; i++)cout << a[i] << " " ; cout<<endl;
#define eb emplace_back
#define e emplace
#define pb push_back
#define srt(a,n) sort(a,a+n)
#define vsrt(a) sort(a.begin(),a.end());
#define bs(a,n,x) binary_search(a, a+n, x);
#define lb(a,n,x) lower_bound(a,a+n,x)-a;
#define ub(a,n,x) upper_bound(a,a+n,x)-a-1; //check once in array if they exist or not at the index of lb and ub;
#define vlb(c,x) (lower_bound(c.begin(),c.end(),x)-c.begin());
#define vub(c,x) (upper_bound(c.begin(),c.end(),x)-c.begin())-1;
#define minpq priority_queue<int, vector<int>, greater<int> >;
#define maxpq priority_queue<int>;
#define maxi(a,n) (max_element(a , a+n)); 
#define mini(a,n) (min_element(a,a+n));
#define INF (int)1e9
#define ff first
#define ss second
typedef long double dub;
#define set_bits __builtin_popcount
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int , int> pii;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef map<int,int> mii;
ll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}
vector<int> sieve(int n) {int*arr = new int[n + 1](); vector<int> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}
void swap(int &x, int &y) {int temp = x; x = y; y = temp;}
#define spmod 998244353


int main(){
	int t;
	in(t);
	while(t--){
		int n;
		in(n);
		vll a;
		frn(i,0,n){
			int x;
			in(x);
			a.pb(x);
		}
		ll ans = 0;
		frn(i,1,n+1){
			for(int j = a[i-1] - i%a[i-1] ; j <= n ; j+=a[i-1]){
				if(j>0 && a[i-1]*a[j-1] == i+j){
					if(j > i)ans++;
				}
			}
		}
		out(ans);
	}
		return 0;
}
