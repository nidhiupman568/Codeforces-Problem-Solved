#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

#define N 1000

int i,j,k,n,m,t,fa[N+50],vis[N+50],vis2[N+50],in0[N+50],in[N+50];

int find(int x){return (fa[x]==x)?x:fa[x]=find(fa[x]);}
vector<pair<int,int> > ans;
vector<int> vq,v[N+50];

int s3[N+50];

bool fuck2(int id){
	int i,k,it=0;
	queue<int> q;
	for(auto i:vq)in[i]=in0[i];
	in[id]=0;
	for(auto i:vq)if(!in[i])q.push(i);
	while(!q.empty()){
		k=q.front(); q.pop();
		s3[++it]=k;
		for(auto i:v[k])if(i!=id){
			in[i]--; if(!in[i])q.push(i);
		}
	}
	if(it!=vq.size())return 0;
	for(i=1;i<it;i++)ans.push_back({s3[i],s3[i+1]});
	if(id)ans.push_back({s3[it],id});
	return 1;
}

void fuck(){
	if(vq.size()==1)return;
	if(fuck2(0))return;
	for(auto i:vq)if(fuck2(i))return;
	cout<<-1; exit(0);
}

int main(){
	ios::sync_with_stdio(0); cin.tie(0);
	cin>>n>>m;
	for(i=1;i<=n;i++)fa[i]=i;
	for(i=1;i<=m;i++){
		cin>>j>>k;
		in0[k]++;
		v[j].push_back(k);
		j=find(j); k=find(k);
		fa[j]=k;
	}
	for(i=1;i<=n;i++){
		if(find(i)!=i)continue;
		vq={};
		for(j=1;j<=n;j++)if(find(j)==i)vq.push_back(j);
		fuck();
	}
	cout<<ans.size()<<'\n';
	for(auto [i,j]:ans){
		cout<<i<<' '<<j<<'\n';
	}
}
