#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
using namespace std;
int gcd(int a, int b)
{
    if (b == 0)
    {
        return a;
    }
    else return gcd(b,a%b);
}
long long int lcm(int a, int b)
{
    return a * 1ll * b / gcd(a, b);
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vector<int>v(n);
        int jedna = 0;
        multiset<int>s;
        for(int i=0;i<n;i++)
        {
            cin >> v[i];
            if (v[i] == 1)
            {
                jedna++;
            }
            
        }
        if (jedna > 0)
        {
            cout << "YES" << '\n';
        }
        else
        {
            int mini = *min_element(v.begin(), v.end());
            vector<int>nd;
            for(int i=0;i<n;i++)
            {
                int teraz = v[i];
                if (teraz % mini != 0)
                {
                    nd.push_back(teraz);
                }
            }
            int siz = nd.size();
            int flag = 0;
            long long int g = 0;
            for (int i = 0; i < siz; i++)g = gcd(g, nd[i]);
            if (flag == 0)
            {
                int vys = 0;
                for (int i = 0; i < n; i++)
                {
                    if (g%v[i] == 0)
                    {
                        vys = 1;
                    }
                }
                if (vys == 1)
                {
                    cout << "YES" << '\n';
                }
                else
                {
                    cout << "NO" << '\n';
                }
 
            }
            else
            {
                
                cout << "NO" << '\n';
            }
        }
    }
    return 0;
    ///std::cout << "Hello World!\n";
}
