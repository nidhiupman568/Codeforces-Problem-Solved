#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree< int, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update> Ordered_Set;
// *find_by_order, order_of_key
using ll = long long;
using ld = long double;
#define F0R(i, a, b) for (int i = (a); i < (b); ++i)
#define FOR(i, a) F0R(i, 0, a)
#define endl "\n"
#define int long long
#define mem(x, y) memset( x, y, sizeof x )
#define SetPre(n, x)  cout << fixed << setprecision(n) << x
#define Sonic ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define File freopen("input.txt", "r", stdin),freopen("output.txt", "w", stdout);
#define yes cout << "YES"
#define no cout << "NO"

void solve()
{
    int n; cin >> n;
    int a1 = 0, a2 = 0, a3 = 0;
    map<string, int>f1, f2, f3;
    vector<string>v1(n), v2(n), v3(n);
    FOR(i,n)
    {
        cin >> v1[i];
        f1[v1[i]]++;
    }
    FOR(i,n)
    {
        cin >> v2[i];
        f2[v2[i]]++;
    }
    FOR(i,n)
    {
        cin >> v3[i];
        f3[v3[i]]++;
    }
    map<string, bool>vis;
    FOR(i,n)
    {
        if( !vis[v1[i]] )
        {
            if ( f3[v1[i]] && f2[v1[i]] )
                a1 += 0;
            else if ( f2[v1[i]] )
                a1++, a2++;
            else if ( f3[v1[i]] )
                a1++, a3++;
            else
                a1 += 3;
        }

        vis[v1[i]] = true;
    }
    FOR(i,n)
    {
        if( !vis[v2[i]] )
        {
            if( f3[v2[i]] )
                a2++, a3++;
            else
                a2 += 3;
        }
        vis[v2[i]] = true;
    }
    FOR(i,n)
    {
        if( !vis[v3[i]] )
            a3 += 3;
    }
    cout << a1 << " " << a2 << " " << a3;
}

signed main()
{
    Sonic
    int T = 1; cin >> T;
    while( T-- )
    {
        solve();
        // I HATE UVA
        // if( T > 0 )
        cout << endl;
    }
    return 0;
}
